@model Behemoth.Games.Areas.Admin.Models.GameViewModel
@{
    ViewBag.Title = "GameName";
    IEnumerable<SelectListItem> categoriesList = ViewBag.Categories;
}

<fieldset class="form-horizontal">
    <legend>GameViewModel</legend>

    <div class="control-group">
        @Html.LabelFor(model => model.Name, new { @class = "control-label" })
        <div class="controls">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name, null, new { @class = "help-inline" })
        </div>
    </div>

    <div class="control-group">
        @Html.LabelFor(model => model.ImageUrl, new { @class = "control-label" })
        <div class="controls">
            @Html.EditorFor(model => model.ImageUrl, "FileUpload",
                             new { id = "imgUrl", uploadId = "imageUpload", action = "UploadedImages", eventFunction = "imgFill" })
            @Html.ValidationMessageFor(model => model.ImageUrl, null, new { @class = "help-inline" })
        </div>
    </div>

    <div class="control-group">
        @Html.LabelFor(model => model.ScriptUrl, new { @class = "control-label" })
        <div class="controls">
            @Html.EditorFor(model => model.ScriptUrl, "FileUpload",
                                      new { id = "scriptUrl", uploadId = "scriptUpload", action = "UploadedScripts", eventFunction = "scriptFill" })
            @Html.ValidationMessageFor(model => model.ScriptUrl, null, new { @class = "help-inline" })
        </div>
    </div>

    <div class="control-group">
        @Html.LabelFor(model => model.Description, new { @class = "control-label" })
        <div class="controls">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description, null, new { @class = "help-inline" })
        </div>
    </div>
    
    <div class="control-group">
        @Html.LabelFor(model => model.CategoryId, new { @class = "control-label" })
        <div class="controls">
            @Html.DropDownListFor(model => model.CategoryId, categoriesList)
            @Html.ValidationMessageFor(model => model.Description, null, new { @class = "help-inline" })
        </div>
    </div>

    <div class="form-actions no-color">
        <input type="submit" value="Save" class="btn" />
    </div>
</fieldset>

